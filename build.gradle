plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.ssginc8'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

def querydslVersion = "5.0.0"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    // 🔹 Validation (회원가입, 입력값 검증)
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // 🔹 Spring Security (로그인, 인증)
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // 🔹 JWT (인증 토큰)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-gson:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'

    // 🔹 DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    // 🔹 QueryDSL (복잡한 검색/조회 쿼리용)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 🔹 AWS 의존성 추가
    implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.1.1'
    implementation("com.amazonaws:aws-java-sdk-s3:1.12.783")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 🔹 oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // 🔹 이메일 인증 (SMTP)
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // 🔹 Redis (세션 캐시 or 알림 큐로 활용)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // 🔹 타임리프 (이메일 전송할 때 사용)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    /* 추가 될 수 있는 의존성들 */

    // 🔹 스케줄링 (복약 알림 등 주기 작업)

    // 🔹 FCM Push 알림


    // 🔹 파일 업로드/다운로드 (보험 서류 등)


}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
